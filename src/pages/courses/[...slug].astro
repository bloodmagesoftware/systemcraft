---
import { type CollectionEntry, getCollection, render } from "astro:content";
import Layout from "../../layouts/App.astro";
import Footer from "../../components/Footer.astro";
import { examples } from "../../content/examples";

export async function getStaticPaths() {
	const courses = await getCollection("courses");
	const authors = await getCollection("authors");

	return courses.map((course) => ({
		params: { slug: course.slug },
		props: {
			course,
			authors: course.data.authors.map((a) =>
				authors.find((b) => b.id === a.id),
			),
			dependencies:
				course.data.dependencies
					?.map((d) => {
						// `c.id` contains the file extensein, `d.id` does not
						// `c.slug` is equivalent to `c.id` but without the file extension
						// therefore is `c.slug` equivalent to `d.id`
						return courses.find((c) => c.slug === d.id);
					})
					?.filter(Boolean) ?? [],
		},
	}));
}

type Props = {
	course: CollectionEntry<"courses">;
	dependencies: Array<CollectionEntry<"courses">>;
	authors: CollectionEntry<"authors">[];
};

const { course, authors, dependencies } = Astro.props;
const { Content } = await render(course);
---

<Layout>
	<main class="prose mx-auto max-w-5xl px-2">
		<h1>
			{course.data.title}
		</h1>
		<p class="flex w-fit flex-row">
			<span>Authors:&nbsp;</span>
			{
				authors.map((author, i) =>
					i > 0 ? (
						<>
							<span>,&nbsp;</span>
							<a href={`/author/${author.id}`}>{author.data.name}</a>
						</>
					) : (
						<a href={`/author/${author.id}`}>{author.data.name}</a>
					),
				)
			}
		</p>
		{
			dependencies.length > 0 ? (
				<p class="flex w-fit flex-row">
					<span>Dependencies:&nbsp;</span>
					{dependencies.map((c, i) => {
						return i > 0 ? (
							<>
								<span>,&nbsp;</span>
								<a href={`/courses/${c.slug}`}>{c.data.title}</a>
							</>
						) : (
							<>
								<a href={`/courses/${c.slug}`}>{c.data.title}</a>
							</>
						);
					})}
				</p>
			) : null
		}
		<Content />
		{
			course.data.examples ? (
				<>
					<h2>Example Solutions</h2>
					<div class="flex flex-col gap-2">
						{course.data.examples.map((example) =>
							example in examples ? (
								<a
									class="rounded bg-gray-700 px-4 py-3 text-white no-underline hover:bg-gray-600"
									href={examples[example].path}
									download={example + ".zip"}
								>
									{examples[example].title}
								</a>
							) : (
								<span class="cursor-not-allowed rounded bg-gray-700 px-4 py-3 text-white">
									{example}
								</span>
							),
						)}
					</div>
				</>
			) : null
		}
	</main>
	<Footer />
</Layout>
